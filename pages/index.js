import { useState } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import Image from "next/image";
import LitJsSdk from "lit-js-sdk";
import Cookies from "js-cookie";
import styles from "../styles/Home.module.css";

const accessControlConditions = [
  {
    contractAddress: "0xB56946D84E4Dd277A8E575D5Dae551638010C6A8",
    standardContractType: "ERC721",
    chain: "mumbai",
    method: "balanceOf",
    parameters: [":userAddress"],
    returnValueTest: {
      comparator: ">",
      value: "0"
    }
  }
];

export default function Home() {
  const router = useRouter();

  const [isSignedIn, setIsSignedIn] = useState(false);
  const [logMesage, setLogMessage] = useState("");

  const handleSignin = async () => {
    setLogMessage("Signing in...");
    // clear cookies
    Cookies.remove("lit_auth");
    const resourceId = {
      baseUrl: "http://localhost:3000",
      path: "/protected",
      orgId: "DevopsInt",
      role: "developer",
      extraData: "" // you can check this in the jwt payload
    };

    const client = new LitJsSdk.LitNodeClient({ alertWhenUnauthorized: false });
    await client.connect();

    const authSig = await LitJsSdk.checkAndSignAuthMessage({ chain: "mumbai" });

    // await client.saveSigningCondition({
    //   accessControlConditions,
    //   chain: "mumbai",
    //   authSig,
    //   resourceId
    // });
    try {
      const jwt = await client.getSignedToken({
        accessControlConditions,
        chain: "mumbai",
        authSig,
        resourceId: resourceId
      });
      Cookies.set("lit-auth", jwt, { expires: 1 });
      setIsSignedIn(true);
      setLogMessage("Signed in successfully");
    } catch (err) {
      console.log("error: ", err);
      if (err.errorCode === "not_authorized")
        return setLogMessage(
          "You are not authorized. Make sure you have the NFT. if not, go to the marketplace and mint one."
        );
    }
  };
  const handleGo = () => router.push("/protected");

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Lit Token Gating!</a>
        </h1>

        <p className={styles.description}>
          Get started by signing in with your wallet and then go to the
          protected page if you have the required{" "}
          <a
            target="_blank"
            rel="noreferrer"
            href="https://mumbai.polygonscan.com/address/0xB56946D84E4Dd277A8E575D5Dae551638010C6A8"
          >
            Color Token NFT(CLRT).{" "}
          </a>
          If you dont have one, Mint one{" "}
          <a
            target="_blank"
            rel="noreferrer"
            href="http://color-marketplace.vercel.app/"
          >
            here
          </a>
        </p>

        <button
          className={styles.button}
          onClick={isSignedIn ? handleGo : handleSignin}
        >
          {isSignedIn ? "Go" : "SignIn"}
        </button>
        <p>{logMesage}</p>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
